{"ast":null,"code":"var _jsxFileName = \"/Users/shs/Desktop/chatting/client/src/components/chatListGroup/index.jsx\";\nimport React from \"react\";\nimport { Row, Col, Toast, ToastBody } from \"reactstrap\";\nimport moment from \"moment\";\nimport \"./style.scss\";\n\nconst ChatListGroup = ({\n  chatList\n}) => {\n  const messages = chatList.map((msg, index) => {\n    console.log(msg);\n    const replaceMsg = msg.chat.msg.split('\\n').map((content, index) => {\n      return React.createElement(\"span\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, content, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }));\n    });\n    const date = moment(msg.chat.date).format('YYYY-MM-DD A hh:mm');\n\n    if (msg.chat.id == this.state.userId) {\n      return React.createElement(Row, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: {\n          size: 6,\n          offset: 6\n        },\n        sm: {\n          size: 6,\n          offset: 6\n        },\n        md: {\n          size: 6,\n          offset: 6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Toast, {\n        className: \"msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(ToastBody, {\n        className: \"myMsgContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, replaceMsg)), React.createElement(\"div\", {\n        className: \"msgDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, date)));\n    } else {\n      return React.createElement(Row, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: {\n          size: 6\n        },\n        sm: {\n          size: 6\n        },\n        md: {\n          size: 6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: this.whisperOpen,\n        className: \"msgUserId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, msg.chat.id)), React.createElement(Toast, {\n        className: \"msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(ToastBody, {\n        className: \"msgContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, replaceMsg)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"msgDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, date)));\n    }\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, messages);\n};\n\nexport default ChatListGroup;","map":{"version":3,"sources":["/Users/shs/Desktop/chatting/client/src/components/chatListGroup/index.jsx"],"names":["React","Row","Col","Toast","ToastBody","moment","ChatListGroup","chatList","messages","map","msg","index","console","log","replaceMsg","chat","split","content","date","format","id","state","userId","size","offset","whisperOpen"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col, Toast, ToastBody } from \"reactstrap\";\nimport moment from \"moment\";\nimport \"./style.scss\";\n\nconst ChatListGroup = ({ chatList }) => {\n    const messages = chatList.map((msg, index) => {\n        console.log(msg)\n        const replaceMsg = msg.chat.msg.split('\\n').map( (content, index) => {\n            return (\n                <span key={index}>{content}<br/></span>\n            )\n        });\n    \n        const date = moment(msg.chat.date).format('YYYY-MM-DD A hh:mm');\n        if(msg.chat.id == this.state.userId){\n            return(\n                <Row key={index} >\n                    <Col xs={{ size : 6, offset : 6}} sm={{ size : 6, offset : 6}} md={{ size : 6, offset : 6}} >\n                        <Toast className=\"msg\">\n                            <ToastBody className=\"myMsgContent\">\n                                {replaceMsg}\n                            </ToastBody>\n                        </Toast>\n                        <div className=\"msgDate\">{date}</div>\n                    </Col>\n                </Row>\n            )\n        }\n        else {\n            return(\n                <Row key={index} >\n                    <Col xs={{ size : 6}} sm={{ size : 6 }} md={{ size : 6 }}>\n                        <div>\n                            <span onClick={this.whisperOpen} className=\"msgUserId\">{msg.chat.id}</span>\n                        </div>\n                        <Toast className=\"msg\">\n                            <ToastBody className=\"msgContent\">\n                                {replaceMsg}\n                            </ToastBody>\n                        </Toast>\n                        <div>\n                            <div></div>\n                        </div>\n                        <div className=\"msgDate\">{date}</div>\n                    </Col>\n                </Row>\n            )\n        }\n    })\n    return (\n        <React.Fragment>\n            { messages }\n        </React.Fragment>\n    );\n}\n\nexport default ChatListGroup;"]},"metadata":{},"sourceType":"module"}