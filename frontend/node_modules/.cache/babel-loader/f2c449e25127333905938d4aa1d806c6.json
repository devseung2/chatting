{"ast":null,"code":"var _jsxFileName = \"/Users/shs/Desktop/chatting/client/src/components/chatListGroup/index.jsx\";\nimport React from \"react\";\nimport { Row, Col, Toast, ToastBody } from \"reactstrap\";\nimport moment from \"moment\";\nimport \"./style.scss\";\nconst messages = chatList.map((msg, index) => {\n  const replaceMsg = msg.chat.msg.split('\\n').map((content, index) => {\n    return React.createElement(\"span\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, content, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }));\n  });\n  const date = moment(msg.chat.date).format('YYYY-MM-DD A hh:mm');\n\n  if (msg.chat.id == this.state.userId) {\n    return React.createElement(Row, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: {\n        size: 6,\n        offset: 6\n      },\n      sm: {\n        size: 6,\n        offset: 6\n      },\n      md: {\n        size: 6,\n        offset: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Toast, {\n      className: \"msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(ToastBody, {\n      className: \"myMsgContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, replaceMsg)), React.createElement(\"div\", {\n      className: \"msgDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, date)));\n  } else {\n    return React.createElement(Row, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: {\n        size: 6\n      },\n      sm: {\n        size: 6\n      },\n      md: {\n        size: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.whisperOpen,\n      className: \"msgUserId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, msg.chat.id)), React.createElement(Toast, {\n      className: \"msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(ToastBody, {\n      className: \"msgContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, replaceMsg)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"msgDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, date)));\n  }\n});\n\nconst ChatListGroup = () => React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n});\n\nexport default ChatListGroup;","map":{"version":3,"sources":["/Users/shs/Desktop/chatting/client/src/components/chatListGroup/index.jsx"],"names":["React","Row","Col","Toast","ToastBody","moment","messages","chatList","map","msg","index","replaceMsg","chat","split","content","date","format","id","state","userId","size","offset","whisperOpen","ChatListGroup"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col, Toast, ToastBody } from \"reactstrap\";\nimport moment from \"moment\";\nimport \"./style.scss\";\n\nconst messages = chatList.map((msg, index) => {\n    const replaceMsg = msg.chat.msg.split('\\n').map( (content, index) => {\n        return (\n            <span key={index}>{content}<br/></span>\n        )\n    });\n\n    const date = moment(msg.chat.date).format('YYYY-MM-DD A hh:mm');\n    if(msg.chat.id == this.state.userId){\n        return(\n            <Row key={index} >\n                <Col xs={{ size : 6, offset : 6}} sm={{ size : 6, offset : 6}} md={{ size : 6, offset : 6}} >\n                    <Toast className=\"msg\">\n                        <ToastBody className=\"myMsgContent\">\n                            {replaceMsg}\n                        </ToastBody>\n                    </Toast>\n                    <div className=\"msgDate\">{date}</div>\n                </Col>\n            </Row>\n        )\n    }\n    else {\n        return(\n            <Row key={index} >\n                <Col xs={{ size : 6}} sm={{ size : 6 }} md={{ size : 6 }}>\n                    <div>\n                        <span onClick={this.whisperOpen} className=\"msgUserId\">{msg.chat.id}</span>\n                    </div>\n                    <Toast className=\"msg\">\n                        <ToastBody className=\"msgContent\">\n                            {replaceMsg}\n                        </ToastBody>\n                    </Toast>\n                    <div>\n                        <div></div>\n                    </div>\n                    <div className=\"msgDate\">{date}</div>\n                </Col>\n            </Row>\n        )\n    }\n})\n\nconst ChatListGroup = () => (\n\t<React.Fragment>\n\t\t{\n            \n            \n        }\n\t</React.Fragment>\n);\n\nexport default ChatListGroup;"]},"metadata":{},"sourceType":"module"}