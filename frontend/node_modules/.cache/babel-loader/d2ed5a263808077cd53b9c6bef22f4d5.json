{"ast":null,"code":"var _jsxFileName = \"/Users/shs/Desktop/chatting/client/src/components/chatListGroup/index.jsx\";\nimport React from \"react\";\nimport { Row, Col, Toast, ToastBody } from \"reactstrap\";\nimport moment from \"moment\";\nimport \"./style.scss\";\n\nconst ChatListGroup = ({\n  chatList,\n  whisperOpen,\n  userId\n}) => React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, chatList.map((chat, index) => {\n  console.log(chat);\n  const replaceMsg = chat.msg.split('\\n').map((content, index) => {\n    return React.createElement(\"span\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, content, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }));\n  });\n  const date = moment(chat.date).format('YYYY-MM-DD A hh:mm');\n\n  if (chat.id == userId) {\n    return React.createElement(Row, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: {\n        size: 6,\n        offset: 6\n      },\n      sm: {\n        size: 6,\n        offset: 6\n      },\n      md: {\n        size: 6,\n        offset: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Toast, {\n      className: \"msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(ToastBody, {\n      className: \"myMsgContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, replaceMsg)), React.createElement(\"div\", {\n      className: \"msgDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, date)));\n  } else {\n    return React.createElement(Row, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: {\n        size: 6\n      },\n      sm: {\n        size: 6\n      },\n      md: {\n        size: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: whisperOpen,\n      className: \"msgUserId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, chat.id)), React.createElement(Toast, {\n      className: \"msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(ToastBody, {\n      className: \"msgContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, replaceMsg)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"msgDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, date)));\n  }\n}));\n\nexport default ChatListGroup;","map":{"version":3,"sources":["/Users/shs/Desktop/chatting/client/src/components/chatListGroup/index.jsx"],"names":["React","Row","Col","Toast","ToastBody","moment","ChatListGroup","chatList","whisperOpen","userId","map","chat","index","console","log","replaceMsg","msg","split","content","date","format","id","size","offset"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,SAA1B,QAA2C,YAA3C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,cAAP;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA;AAAzB,CAAD,KAClB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQF,QAAQ,CAACG,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAMI,UAAU,GAAGJ,IAAI,CAACK,GAAL,CAASC,KAAT,CAAe,IAAf,EAAqBP,GAArB,CAA0B,CAACQ,OAAD,EAAUN,KAAV,KAAoB;AAC7D,WACI;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBM,OAAnB,EAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,CADJ;AAGH,GAJkB,CAAnB;AAMA,QAAMC,IAAI,GAAGd,MAAM,CAACM,IAAI,CAACQ,IAAN,CAAN,CAAkBC,MAAlB,CAAyB,oBAAzB,CAAb;;AACA,MAAGT,IAAI,CAACU,EAAL,IAAWZ,MAAd,EAAqB;AACjB,WACI,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEG,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEU,QAAAA,IAAI,EAAG,CAAT;AAAYC,QAAAA,MAAM,EAAG;AAArB,OAAT;AAAkC,MAAA,EAAE,EAAE;AAAED,QAAAA,IAAI,EAAG,CAAT;AAAYC,QAAAA,MAAM,EAAG;AAArB,OAAtC;AAA+D,MAAA,EAAE,EAAE;AAAED,QAAAA,IAAI,EAAG,CAAT;AAAYC,QAAAA,MAAM,EAAG;AAArB,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,UADL,CADJ,CADJ,EAMI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BI,IAA1B,CANJ,CADJ,CADJ;AAYH,GAbD,MAcK;AACD,WACI,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEP,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEU,QAAAA,IAAI,EAAG;AAAT,OAAT;AAAsB,MAAA,EAAE,EAAE;AAAEA,QAAAA,IAAI,EAAG;AAAT,OAA1B;AAAwC,MAAA,EAAE,EAAE;AAAEA,QAAAA,IAAI,EAAG;AAAT,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,OAAO,EAAEd,WAAf;AAA4B,MAAA,SAAS,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDG,IAAI,CAACU,EAAxD,CADJ,CADJ,EAII,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,UADL,CADJ,CAJJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,EAYI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BI,IAA1B,CAZJ,CADJ,CADJ;AAkBH;AACJ,CA3CD,CAFR,CADJ;;AAmDA,eAAeb,aAAf","sourcesContent":["import React from \"react\";\nimport { Row, Col, Toast, ToastBody } from \"reactstrap\";\nimport moment from \"moment\";\nimport \"./style.scss\";\n\nconst ChatListGroup = ({ chatList, whisperOpen, userId }) => (\n    <React.Fragment>\n        { \n            chatList.map((chat, index) => {\n                console.log(chat);\n                const replaceMsg = chat.msg.split('\\n').map( (content, index) => {\n                    return (\n                        <span key={index}>{content}<br/></span>\n                    )\n                });\n            \n                const date = moment(chat.date).format('YYYY-MM-DD A hh:mm');\n                if(chat.id == userId){\n                    return(\n                        <Row key={index} >\n                            <Col xs={{ size : 6, offset : 6}} sm={{ size : 6, offset : 6}} md={{ size : 6, offset : 6}} >\n                                <Toast className=\"msg\">\n                                    <ToastBody className=\"myMsgContent\">\n                                        {replaceMsg}\n                                    </ToastBody>\n                                </Toast>\n                                <div className=\"msgDate\">{date}</div>\n                            </Col>\n                        </Row>\n                    )\n                }\n                else {\n                    return(\n                        <Row key={index} >\n                            <Col xs={{ size : 6}} sm={{ size : 6 }} md={{ size : 6 }}>\n                                <div>\n                                    <span onClick={whisperOpen} className=\"msgUserId\">{chat.id}</span>\n                                </div>\n                                <Toast className=\"msg\">\n                                    <ToastBody className=\"msgContent\">\n                                        {replaceMsg}\n                                    </ToastBody>\n                                </Toast>\n                                <div>\n                                    <div></div>\n                                </div>\n                                <div className=\"msgDate\">{date}</div>\n                            </Col>\n                        </Row>\n                    )\n                }\n            })\n        }\n    </React.Fragment>\n);\n\nexport default ChatListGroup;"]},"metadata":{},"sourceType":"module"}